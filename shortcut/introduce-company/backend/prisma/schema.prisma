// This file is generated by FUSEBLE.inc CLI

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// _enum.prisma

enum NoticeType {
  INFO
  PRIMARY
}

// _enum.prisma

enum UserSocialProvider {
  KAKAO
  NAVER
  GOOGLE
  FACEBOOK
  GITHUB
  APPLE
}

enum UserRole {
  ADMIN
  USER
}
// notice.prisma

model Notice {
  id          String     @id @default(cuid())
  seq         Int        @default(autoincrement())
  title       String
  description String?    @db.VarChar(255)
  type        NoticeType @default(INFO)
  content     String     @db.Text
  published   Boolean    @default(false)

  userId String?
  user   User?   @relation(fields: [userId], references: [id])

  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  deletedAt     DateTime?       @db.Timestamp(6)
  NoticeComment NoticeComment[]

  @@unique([seq])
}

model NoticeComment {
  id      String @id @default(cuid())
  content String @db.Text

  noticeId String
  notice   Notice @relation(fields: [noticeId], references: [id])
  userId   String
  user     User   @relation(fields: [userId], references: [id])

  parentId String
  parent   NoticeComment?  @relation("commentToComment", fields: [parentId], references: [id])
  children NoticeComment[] @relation("commentToComment")

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

// user.prisma

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  password  String?
  nickname  String    @unique
  role      UserRole  @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  notices       Notice[]
  NoticeComment NoticeComment[]
}
// _relation.prisma
